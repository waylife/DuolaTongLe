	apply plugin: 'android'

	repositories {
		mavenCentral()
	}

    dependencies {
	//	compile 'com.squareup.leakcanary:leakcanary-android:1.3'
//		release compile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
        compile fileTree(dir: 'libs', include: '*.jar')
 //       compile project(':SogouKratos')
  //      compile files('libs/eventbus-2.4.0.jar')
    //    compile files('libs/libwebp.jar')
    }

	android {
	
		defaultConfig.versionCode = 1
		defaultConfig.versionName = "1.0.0"
		
		def releaseTime = defaultConfig.versionName + Calendar.instance.format("-yyMMdd-HHmm")
		
	    compileSdkVersion rootProject.ext.compileSdkVersion
  		buildToolsVersion rootProject.ext.buildToolsVersion
	
	    packagingOptions {
	        exclude 'META-INF/DEPENDENCIES.txt'
	        exclude 'META-INF/LICENSE.txt'
	        exclude 'META-INF/NOTICE.txt'
	        exclude 'META-INF/NOTICE'
	        exclude 'META-INF/LICENSE'
	        exclude 'META-INF/DEPENDENCIES'
	        exclude 'META-INF/notice.txt'
	        exclude 'META-INF/license.txt'
	        exclude 'META-INF/dependencies.txt'
	        exclude 'META-INF/LGPL2.1'
	    }
	
	    lintOptions {
	        abortOnError false
	    }
	
	    sourceSets {
	        main {
	            manifest.srcFile 'AndroidManifest.xml'
	            jniLibs.srcDirs = ['libs']
	            java.srcDirs = ['src']
	            resources.srcDirs = ['src']
	            aidl.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['res']
	            assets.srcDirs = ['assets']
	        }
	    }
	
	   
	
	    productFlavors { 
	    
	        sogou {
	            manifestPlaceholders = [ versionInfo : releaseTime ]
	        }

		}
	    
	    buildTypes {

			releaseUnsigned {
				minifyEnabled true
				proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
			}
			
		}
		
		applicationVariants.all { variant ->
		    variant.outputs.each { output ->
		        output.outputFile = new File(
		                output.outputFile.parent,
		                output.outputFile.name.replace("-sogou-release.apk", "-${releaseTime}.apk"))
		    }
		}
	}

	tasks.withType(JavaCompile) {
	    options.encoding = "UTF-8"
	}
